{
  "name": "uploadshad-api",
  "type": "registry:lib",
  "files": [
    {
      "path": "component/uploadshad/route.ts",
      "content": "import { S3Service, FilePayloadSchema } from \"@/registry/component/uploadshad/utils\";\r\nimport { NextResponse, NextRequest } from \"next/server\";\r\nconst acceptedTypes = [\"image/png\", \"image/jpeg\"];\r\nconst maxFileSize = 10 * 1024 * 1024; // 10MB\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const raw = await request.json(); // Access the request body\r\n  const filePayload = FilePayloadSchema.safeParse(raw);\r\n  if (!filePayload.success || !filePayload.data)\r\n    return NextResponse.json(\r\n      { message: \"Missing payload values\" },\r\n      {\r\n        status: 400,\r\n      }\r\n    );\r\n  //   console.log(\"Hello: \", filePayload.data);\r\n  const s3Service = new S3Service();\r\n\r\n  const signedURLResult = await s3Service.getSignedURL(filePayload.data, {\r\n    acceptedTypes,\r\n    maxFileSize,\r\n  });\r\n\r\n  if (signedURLResult.failure) {\r\n    console.log(\"Failed to generate signed URL.\", signedURLResult);\r\n    return new NextResponse(JSON.stringify({ message: \"Failed to generate signed URL.\" }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  }\r\n\r\n  return NextResponse.json(signedURLResult, {\r\n    status: 200,\r\n  });\r\n}\r\n\r\nexport async function DELETE(request: NextRequest) {\r\n  const params = new URL(request.url).searchParams; // Access the request.url\r\n  const url = params.get(\"url\");\r\n\r\n  if (!url) return NextResponse.json({ message: \"Missing query values\" }, { status: 400 });\r\n\r\n  const s3Service = new S3Service();\r\n  const deleteResult = await s3Service.deleteFile(url);\r\n\r\n  if (deleteResult.failure || deleteResult.success === false)\r\n    return NextResponse.json({ message: \"Failed to delete file.\" }, { status: 500 });\r\n  console.log(\"Result: \", deleteResult);\r\n\r\n  return NextResponse.json(deleteResult, { status: 200 });\r\n}\r\n",
      "type": "registry:component",
      "target": "app/api/uploadshad/route.ts"
    }
  ]
}